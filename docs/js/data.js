window.DOC_DATA={"assets":{"styles":["plugins/doczilla-details/index.css","plugins/doczilla-highlight/index.css"],"scripts":["plugins/doczilla-highlight/index.js"]},"locales":[{"name":"zh","text":"中文","title":"测试文档","links":[{"text":"测试链接","url":"test-url"}],"groups":[{"name":"guide","text":"使用指南","docs":[{"source":"# 文档三\n\n\n```js\nimport { Popover } from '@ali/aps';\n...\nrender() {\n  return <div>\n    <Popover \n      overlay={true} \n      visible={this.state.visible} \n      dock=\"center\"\n      follow=\"rigth\"\n      autoClose={true} />\n  </div>;\n}\n...\n```\n\n::: details\n```js\nimport { Popover } from '@ali/aps';\n...\nrender() {\n  return <div>\n    <Popover \n      overlay={true} \n      visible={this.state.visible} \n      dock=\"center\"\n      follow=\"rigth\"\n      autoClose={true} />\n  </div>;\n}\n...\n```\n:::\n\n::: details 展开\nxxx\n:::\n\n/Users/Houfeng/my/dev/doczilla/markdown/xxxx \n\n/Users/Houfeng/my/dev/doczilla/markdown/yyyy","filename":"./markdown/doc3.md","group":"guide","name":"doc3","title":"文档三","index":0,"result":"<h1>文档三</h1>\n<pre><code class=\"language-js\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> Popover <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@ali/aps'</span><span class=\"token punctuation\">;</span>\n<span class=\"token operator\">...</span>\n<span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token operator\">&lt;</span>div<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span>Popover \n      overlay<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">}</span> \n      visible<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>visible<span class=\"token punctuation\">}</span> \n      dock<span class=\"token operator\">=</span><span class=\"token string\">\"center\"</span>\n      follow<span class=\"token operator\">=</span><span class=\"token string\">\"rigth\"</span>\n      autoClose<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">}</span> <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n  <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token operator\">...</span>\n</code></pre>\n<details class=\"expand\"><summary>Details</summary>\n<pre><code class=\"language-js\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> Popover <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@ali/aps'</span><span class=\"token punctuation\">;</span>\n<span class=\"token operator\">...</span>\n<span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token operator\">&lt;</span>div<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span>Popover \n      overlay<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">}</span> \n      visible<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>visible<span class=\"token punctuation\">}</span> \n      dock<span class=\"token operator\">=</span><span class=\"token string\">\"center\"</span>\n      follow<span class=\"token operator\">=</span><span class=\"token string\">\"rigth\"</span>\n      autoClose<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">}</span> <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n  <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token operator\">...</span>\n</code></pre>\n</details>\n<details class=\"expand\"><summary>展开</summary>\n<p>xxx</p>\n</details>\n<p>/Users/Houfeng/my/dev/doczilla/markdown/xxxx</p>\n<p>/Users/Houfeng/my/dev/doczilla/markdown/yyyy</p>\n"},{"source":"# Icon\n\n语义化的矢量图形。\n\n# 如何使用\n\n使用 `<Icon />` 标签声明组件，指定图标对应的 type 属性，示例代码如下:\n\n```js\n<Icon type=\"refresh\" />\n```\n\n# 图标列表\n\n使用方式：\n\n- 在下方找到需要使用的图标，例如 `xiajiantou`\n- 则直接使用 `xiajiantou` 作为`type`\n\n## API\n\n由于图标字体本质上还是文字，可以使用 `style` 和 `className` 设置图标的大小和颜色。\n\n```jsx\n<Icon type=\"question\" style={{ fontSize: 16, color: '#08c' }} />\n```\n\n<!-- @latest-css-url https://at.alicdn.com/t/font_755236_42mhpr0p14p.css -->","filename":"./markdown/doc4.md","group":"guide","name":"doc4","title":"文档 4","index":0,"result":"<h1>Icon</h1>\n<p>语义化的矢量图形。</p>\n<h1>如何使用</h1>\n<p>使用 <code>&lt;Icon /&gt;</code> 标签声明组件，指定图标对应的 type 属性，示例代码如下:</p>\n<pre><code class=\"language-js\"><span class=\"token operator\">&lt;</span>Icon type<span class=\"token operator\">=</span><span class=\"token string\">\"refresh\"</span> <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n</code></pre>\n<h1>图标列表</h1>\n<p>使用方式：</p>\n<ul>\n<li>在下方找到需要使用的图标，例如 <code>xiajiantou</code></li>\n<li>则直接使用 <code>xiajiantou</code> 作为<code>type</code></li>\n</ul>\n<h2>API</h2>\n<p>由于图标字体本质上还是文字，可以使用 <code>style</code> 和 <code>className</code> 设置图标的大小和颜色。</p>\n<pre><code class=\"language-jsx\"><span class=\"token operator\">&lt;</span>Icon type<span class=\"token operator\">=</span><span class=\"token string\">\"question\"</span> style<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span> fontSize<span class=\"token punctuation\">:</span> <span class=\"token number\">16</span><span class=\"token punctuation\">,</span> color<span class=\"token punctuation\">:</span> <span class=\"token string\">'#08c'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span> <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n</code></pre>\n<!-- @latest-css-url https://at.alicdn.com/t/font_755236_42mhpr0p14p.css -->"}]},{"name":"components","text":"组件说明","docs":[{"source":"# Popover \n\n## 简介\nPopover 是一个「弹出内容组件」，可以停靠在窗口指定的边缘或窗口中间，也可以「跟随」指定元素，还可以指定是否开始「遮罩」。\n\n## 使用\n\n```js\nimport { Popover } from '@ali/aps';\n...\nrender() {\n  return <div>\n    <Popover \n      overlay={true} \n      visible={this.state.visible} \n      dock=\"center\"\n      follow=\"rigth\"\n      autoClose={true} />\n  </div>;\n}\n...\n```\n\n## 示例","filename":"./markdown/doc1.md","group":"components","name":"popover","title":"Popover","result":"<h1>Popover</h1>\n<h2>简介</h2>\n<p>Popover 是一个「弹出内容组件」，可以停靠在窗口指定的边缘或窗口中间，也可以「跟随」指定元素，还可以指定是否开始「遮罩」。</p>\n<h2>使用</h2>\n<pre><code class=\"language-js\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> Popover <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@ali/aps'</span><span class=\"token punctuation\">;</span>\n<span class=\"token operator\">...</span>\n<span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token operator\">&lt;</span>div<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span>Popover \n      overlay<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">}</span> \n      visible<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>visible<span class=\"token punctuation\">}</span> \n      dock<span class=\"token operator\">=</span><span class=\"token string\">\"center\"</span>\n      follow<span class=\"token operator\">=</span><span class=\"token string\">\"rigth\"</span>\n      autoClose<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">}</span> <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n  <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token operator\">...</span>\n</code></pre>\n<h2>示例</h2>\n"},{"source":"# Overlay \n\n## 简介\nOverlay 是一个「遮罩组件」，一般无须直接使用 Overlay 组件，多数情况被其它组件引用，比如 Popover 等\n\n## 使用\n\n通过静态方法调用\n```js\nimport { Overlay } from '@ali/aps';\n\n//显示 overlay\nlet hide = Overlay.show();\nhide(); //返值是一个函数直接调用隐藏\n\n//或者这样\nlet ref = Overlay.show();\nOverlay.hide(ref)\n\n//允许点击遮罩时自动关闭\nOverlay.show({ autoClose: true }); \n\n```\n\n通过组件使用\n```js\nimport { Overlay } from '@ali/aps';\n...\nrender() {\n  return <div>\n    <Overlay visible={this.state.visible} autoClose={true} />\n  </div>;\n}\n...\n```\n\n## 示例","filename":"./markdown/doc2.md","group":"components","name":"overlay","title":"Overlay","result":"<h1>Overlay</h1>\n<h2>简介</h2>\n<p>Overlay 是一个「遮罩组件」，一般无须直接使用 Overlay 组件，多数情况被其它组件引用，比如 Popover 等</p>\n<h2>使用</h2>\n<p>通过静态方法调用</p>\n<pre><code class=\"language-js\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> Overlay <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@ali/aps'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">//显示 overlay</span>\n<span class=\"token keyword\">let</span> hide <span class=\"token operator\">=</span> Overlay<span class=\"token punctuation\">.</span><span class=\"token function\">show</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">hide</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//返值是一个函数直接调用隐藏</span>\n\n<span class=\"token comment\">//或者这样</span>\n<span class=\"token keyword\">let</span> ref <span class=\"token operator\">=</span> Overlay<span class=\"token punctuation\">.</span><span class=\"token function\">show</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nOverlay<span class=\"token punctuation\">.</span><span class=\"token function\">hide</span><span class=\"token punctuation\">(</span>ref<span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\">//允许点击遮罩时自动关闭</span>\nOverlay<span class=\"token punctuation\">.</span><span class=\"token function\">show</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> autoClose<span class=\"token punctuation\">:</span> <span class=\"token boolean\">true</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> \n\n</code></pre>\n<p>通过组件使用</p>\n<pre><code class=\"language-js\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> Overlay <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@ali/aps'</span><span class=\"token punctuation\">;</span>\n<span class=\"token operator\">...</span>\n<span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token operator\">&lt;</span>div<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span>Overlay visible<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>visible<span class=\"token punctuation\">}</span> autoClose<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">}</span> <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n  <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token operator\">...</span>\n</code></pre>\n<h2>示例</h2>\n"}]}]}]};